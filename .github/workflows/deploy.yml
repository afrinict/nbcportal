name: Deploy NBC Portal Backend

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Create .env file for testing
      run: |
        cat > .env << EOF
        # Database Configuration
        DATABASE_URL=${{ secrets.DATABASE_URL }}
        
        # JWT Configuration
        JWT_SECRET=${{ secrets.JWT_SECRET }}
        
        # Environment
        NODE_ENV=test
        
        # Server Configuration
        PORT=5000
        
        # CORS Configuration
        CORS_ORIGIN=http://localhost:3000
        
        # File Upload Configuration
        MAX_FILE_SIZE=10485760
        UPLOAD_PATH=./uploads
        EOF
    
    - name: Run tests
      run: npm test || echo "No tests configured"
      
    - name: Build application
      run: npm run build

  deploy-railway:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      run: npm run build
    
    - name: Deploy to Railway
      run: |
        # Install Railway CLI
        npm install -g @railway/cli
        
        # Deploy to Railway
        railway login --token ${{ secrets.RAILWAY_TOKEN }}
        railway up --service ${{ secrets.RAILWAY_SERVICE }}

  deploy-render:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build application
      run: npm run build
    
    - name: Deploy to Render
      run: |
        # Trigger Render deployment via webhook
        curl -X POST ${{ secrets.RENDER_WEBHOOK_URL }} \
          -H "Content-Type: application/json" \
          -d '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}' 